name: Unit Test Library

on:
  workflow_run:
    workflows: [Build C++ Library]
    types:
      - completed

jobs:
  matrix-strategy-setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/read-build-matrix.yml


  unit-test:
    needs: matrix-strategy-setup
    name: ${{ matrix.config.os }} • ${{ matrix.config.cc }}-${{ matrix.config.compiler_version }} • ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix-strategy-setup.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/setup.yml
        with:
          os: ${{ matrix.config.os }}
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          compiler-version: ${{ matrix.config.compiler_version }}
          build-type: ${{ matrix.config.build_type }}
          use-cache: true
          set-env-vars: true

      - name: Download build folder
        uses: actions/download-artifact@v4
        with:
          pattern: build-${{ matrix.os }}-${{ matrix.config.cc }}-${{ matrix.config.compiler_version }}-${{ matrix.config.build_type }}
          path: build/release

      - name: Test
        working-directory: build/release/tests/unit
        run: GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V

      - name: Install
        run: |
          cmake --install build/release --prefix install

      - name: Upload installation as artifact
        uses: actions/upload-artifact@v4
        with:
          name: install_${{ matrix.os }}-${{ matrix.config.cc }}-${{ matrix.config.compiler_version }}-${{ matrix.config.build_type }}
          path: install
          retention-days: 1