name: Unit Test Library

on:
  workflow_run:
    workflows: [Build CPP Library]
    types:
      - completed

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # ensure the repo is checked out at the same commit as the triggering workflow
          ref: ${{ github.event.workflow_run.head_sha }}
        
  build-matrix-reader:
    needs: checkout
    uses: ./.github/workflows/read-build-matrix.yml


  unit-test:
    needs: build-matrix-reader
    name: ${{ matrix.config.os }} • ${{ matrix.config.cc }}-${{ matrix.config.compiler_version }} • ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.build-matrix-reader.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-environment
        with:
          os: ${{ matrix.config.os }}
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          compiler-version: ${{ matrix.config.compiler_version }}
          build-type: ${{ matrix.config.build_type }}
          use-cache: true
          set-env-vars: true

      - name: Download build folder
        uses: actions/download-artifact@v4
        with:
          pattern: build-${{ matrix.os }}-${{ matrix.config.cc }}-${{ matrix.config.compiler_version }}-${{ matrix.config.build_type }}
          path: build/release

      - name: Test
        working-directory: build/release/tests/unit
        run: GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V

      - name: Install
        run: |
          cmake --install build/release --prefix install

      - name: Upload installation as artifact
        uses: actions/upload-artifact@v4
        with:
          name: install_${{ matrix.os }}-${{ matrix.config.cc }}-${{ matrix.config.compiler_version }}-${{ matrix.config.build_type }}
          path: install
          retention-days: 1