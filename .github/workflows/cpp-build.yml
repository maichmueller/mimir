name: Build Library

on: [ push, pull_request ]

jobs:
  matrix-strategy-setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: ./.github/workflows/read-build-matrix.yml

  build:
    needs: matrix-strategy-setup
    name: ${{ matrix.config.os }} • ${{ matrix.config.cc }}-${{ matrix.config.compiler_version }} • ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix-strategy-setup.outputs.matrix) }}

    steps:
      - uses: ./.github/workflows/setup.yml
        with:
          os: ${{ matrix.config.os }}
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          compiler-version: ${{ matrix.config.compiler_version }}
          build-type: ${{ matrix.config.build_type }}
          use-cache: true
          set-env-vars: true

      - name: Install local conanfiles
        working-directory: dependencies
        run: |
          conan create loki --build missing --options='loki:*/fPIC=True'
          conan create nauty --build missing --options='nauty:*/fPIC=True'

      # Build step
      - name: Configure Mimir
        shell: bash
        run: >
          ./configure.sh  
          --source .  
          --build build  
          --build_type=${{ matrix.config.build_type }}  
          -DBUILD_TESTS=ON

      - name: Build Mimir
        run: |
          cmake --build build --target all

      - name: Upload build folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ matrix.config.cc }}-${{ matrix.config.compiler_version }}-${{ matrix.config.build_type }}
          path: build/
          retention-days: 1