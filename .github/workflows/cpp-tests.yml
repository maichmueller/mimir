name: Test CPP Library

on: [ push, pull_request ]

jobs:
  config-reader:
    uses: ./.github/workflows/read-build-matrix.yml

  build:
    needs: config-reader
    name: ${{ matrix.config.os }} • ${{ matrix.config.cc }}-${{ matrix.config.compiler_version }} • ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.confige-reader.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
      - name: Run Composite Action for Build
        uses: ./.github/.actions/cpp-build
        with:
          os: ${{ matrix.config.os }}
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          compiler_version: ${{ matrix.config.compiler_version }}
          build_type: ${{ matrix.config.build_type }}


  test:
    needs: build
    name: ${{ matrix.config.os }} • ${{ matrix.config.cc }}-${{ matrix.config.compiler_version }} • ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.confige-reader.outputs.matrix) }}

    steps:
      - name: Run Unit Tests
        working-directory: build/release/tests/unit
        run: GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V

      - name: Install Mimir
        run: |
          cmake --install build/release --prefix install

      - name: Configure Integration Tests
        shell: bash
        run: >
          cmake 
          -S tests/integration 
          -B tests/integration/build
          -DCMAKE_PREFIX_PATH=install

      - name: Build Integration Tests
        run: |
          cmake --build tests/integration/build

      - name: Run Integration Tests
        working-directory: tests/integration/build
        run: |
          GTEST_COLOR=1 ctest -V