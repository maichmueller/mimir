name: Setup Environment

on:
  workflow_call: 
    inputs:
      os: 
        required: true
        type: string
      cc:
        required: true
        type: string
      cxx:
        required: true
        type: string
      compiler-version:
        required: true
        type: string
      build-type:
        required: true
        type: string
      use-cache:
        required: false
        type: boolean
        default: false
      set-env-vars:
        required: false
        type: boolean
        default: true

jobs:
    setup:
      name: ${{ inputs.os }} • ${{ inputs.cc }}-${{ inputs.compiler-version }} • ${{ inputs.build-type }}
      runs-on: ${{ inputs.os }}
      steps:
        - name: Checkout Mimir
          uses: actions/checkout@v4
  
        - name: Setup CMake
          uses: jwlawson/actions-setup-cmake@v2
          with:
            cmake-version: '3.28.x'
  
        - name: Show CMake Version
          run: cmake --version
  
        - uses: actions/setup-python@v5
          with:
            python-version: '3.11'
  
        - name: Set up Ninja
          uses: seanmiddleditch/gha-setup-ninja@master
  
        - name: Set Environment Variables
          if: ${{ inputs.set-env-vars == true }}
          shell: bash
          run: |
            if [[ "${{ inputs.os }}" == "macos-latest" ]]; then
              echo "Skip for macos."
            else
              echo "CC=${{ inputs.cc }}-${{ inputs.compiler_version }}" >> "$GITHUB_ENV"
              echo "CXX=${{ inputs.cxx }}-${{ inputs.compiler_version }}" >> "$GITHUB_ENV"
            fi
            conan_home="$HOME/.conan2-${{ runner.os }}-${{ inputs.build_type }}-${{ inputs.cc }}-${{ inputs.compiler_version }}"
            echo "Conan Home is $conan_home"
            echo "CONAN_HOME=$conan_home" >> "$GITHUB_ENV"
  
        - name: Install conan
          id: conan
          shell: bash
          run: |
            python3 -m pip install --upgrade pip setuptools
            python3 -m pip install 'conan==2.8.1'
            conan profile detect --name default
            
            # replace any cppstd=(gnu)XX entry in the compiler.cppstd line with cppstd=20
            profile=$(conan profile path default)
            sed -i 's/compiler\.cppstd=gnu\?[0-9]\+/compiler.cppstd=20/' "$profile"
  
        - name: Cache Conan Dependencies Install
          if: ${{ inputs.use-cache == true }}
          id: cache-conan-deps
          uses: actions/cache@v4
          env:
            cache-name: cache-conan-deps
          with:
            path: ${{ env.CONAN_HOME }}
            key: ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.build_type }}-${{ inputs.cc }}-${{ inputs.compiler_version }}-${{ hashFiles('conandata.yml') }}-${{ hashFiles('**/conanfile.py') }}
