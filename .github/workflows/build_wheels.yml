name: Build Wheels

on: [ push ]

jobs:
  build_wheels:
    name: Build wheels • ${{ matrix.os }} • ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is x86_64, macos-14 is arm64
        include:
          - os: macos-13
            arch: x86_64
          - os: macos-14
            arch: arm64
            # revisit this when github actions provides aarch64 linux runners at the end of 2024
            # (emulation for cross compilation takes too long)
            # - os: ubuntu-latest
            #   arch: aarch64
          - os: ubuntu-latest
            arch: x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Python 3.8 is a necessary workaround for macos with arm64, otherwise arch errors occur
      # revisit once support for python 3.8 is dropped and wheels are built from 3.9 onwards
      - name: Set up Python
        uses: actions/setup-python@v5
        # see https://github.com/actions/setup-python/issues/862
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
        with:
          python-version: "3.8"

      - name: Install dependencies and requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine 'conan==2.8.1'

      - name: Clone Conan-Center-Index
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        working-directory: ${{ github.workspace }}
        run: |
          # clone conan-center-index to get the recipes locally
          git clone https://github.com/conan-io/conan-center-index.git
          
          echo "CONAN_CENTER_PATH=${{ github.workspace }}/conan-center-index" >> "$GITHUB_ENV"

      - name: Configure Conan
        run: |
          conan_home="$HOME/.conan2"
          export CONAN_HOME="$conan_home"
          conan profile detect --name default
          echo "CONAN_HOME=$conan_home" >> "$GITHUB_ENV"

      - name: Prebuild Conan dependencies
        if: ${{ startsWith(matrix.os, 'macos') }}
        env:
          CONAN_HOME: ${{ env.CONAN_HOME }}
        run: |
          export MACOSX_DEPLOYMENT_TARGET=11.0
          ./configure.sh \
          --only_install

      - name: Setup LIBC Conan Dependencies Identifier
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          echo -e "None\nNone" > "$HOME/libc-identifier.txt"
          echo "LIBC_CACHE_ID_FILE=$HOME/libc-identifier.txt" >> "$GITHUB_ENV"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_ENVIRONMENT_LINUX: >
            CROSS_COMPILE_ARCH="$(uname -m)"
            CONAN_HOME="${{ env.CONAN_HOME }}"
            CONAN_CENTER_CLONE_PATH="${{ env.CONAN_CENTER_PATH }}"
            LIBC_CACHE_ID_FILE="${{ env.LIBC_CACHE_ID_FILE }}"
          CIBW_ENVIRONMENT_MACOS: >
            CONAN_HOME="${{ env.CONAN_HOME }}"
            MACOSX_DEPLOYMENT_TARGET=11.0
          CIBW_BUILD_VERBOSITY: "1"
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: delocate-listdeps --all {wheel} && delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ runner.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

