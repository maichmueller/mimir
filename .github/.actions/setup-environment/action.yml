name: 'Setup Environment'
description: 'Sets up the environment for building the project'

inputs:
  os:
    description: 'Operating system'
    required: true
    type: string
  cc:
    description: 'C compiler'
    required: true
    type: string
  cxx:
    description: 'C++ compiler'
    required: true
    type: string
  compiler-version:
    description: 'Compiler version'
    required: true
    type: string
  build-type:
    description: 'Build type'
    required: true
    type: string
  python-version:
    description: 'Python version to set up'
    required: false
    type: string
    default: '3.11'
  use-cache:
    description: 'Whether to use cache for Conan dependencies'
    required: false
    type: boolean
    default: false
  set-env-vars:
    description: 'Whether to set environment variables for the compilers'
    required: false
    type: boolean
    default: true

runs:
  using: 'composite'
  steps:
    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.28.x'

    - name: Show CMake Version
      shell: bash
      run: cmake --version

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Set up Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Set Environment Variables
      if: ${{ inputs.set-env-vars == 'true' }}
      shell: bash
      run: |
        if [[ "${{ inputs.os }}" == "macos-latest" ]]; then
          echo "Skip for macOS."
        else
          echo "CC=${{ inputs.cc }}-${{ inputs.compiler-version }}" >> "$GITHUB_ENV"
          echo "CXX=${{ inputs.cxx }}-${{ inputs.compiler-version }}" >> "$GITHUB_ENV"
        fi
        conan_home="$HOME/.conan2-${{ runner.os }}-${{ inputs.build-type }}-${{ inputs.cc }}-${{ inputs.compiler-version }}"
        echo "Conan Home is $conan_home"
        echo "CONAN_HOME=$conan_home" >> "$GITHUB_ENV"

    - name: Install Conan
      shell: bash
      run: |
        python3 -m pip install --upgrade pip setuptools
        python3 -m pip install 'conan==2.8.1'
        conan profile detect --name default
        
        profile=$(conan profile path default)
        awk '{ sub(/compiler\.cppstd=gnu?[0-9]+/, "compiler.cppstd=gnu20"); print }' "$profile" > tmpfile && mv tmpfile "$profile"

    - name: Cache Conan Dependencies
      if: ${{ inputs.use-cache == 'true' }}
      uses: actions/cache@v4
      with:
        path: ${{ env.CONAN_HOME }}
        key: ${{ runner.os }}-cache-conan-deps-${{ inputs.build-type }}-${{ inputs.cc }}-${{ inputs.compiler-version }}-${{ hashFiles('conandata.yml') }}-${{ hashFiles('**/conanfile.py') }}